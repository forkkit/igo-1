// DO NOT MODIFY! AUTO GENERATED BY igo v1\.0\.2 \(https://github\.com/rocketlaunchr/igo\)

package main

import fordefer "github\.com/rocketlaunchr/igo/stack"

import \(
	"errors"
	"fmt"
\)

func isPalindrome\(m \*string\) \(bool, error\) {

	defer func\(\) {
		go fmt\.Println\("Palindrome function called!"\)
	}\(\)

	valB := ""

	if m == nil {
		return false, errors\.New\("no valid string parameter passed in"\)
	}
	valA := \*m
	for i := len\(valA\) - 1; i >= 0; i-- {
		valB \+= string\(valA\[i\]\)
	}
	return valA == valB, nil

}

func main\(\) {

	words := \[\]\*string{&\[\]string{"civic"}\[0\], &\[\]string{`relation`}\[0\]}
	\w{15} := fordefer\.NewStack\(true\)
	defer \w{15}\.Unwind\(\)

	for _, word := range words {
		\w{6}, \w{6} := isPalindrome\(word\)
		if \w{6} != nil {
			panic\(\w{6}\)
		}
		valid := \w{6}
		if valid {
			fmt\.Printf\("%s is a valid palindrome\.\\n", \*word\)
		} else {
			fmt\.Printf\("%s is not a valid palindrome\.\\n", \*word\)
		}

		\w{15}\.Add\(false, func\(\) {
			fmt\.Printf\("done processing word '%s'\\n", \*word\)
		}\)
		\w{15}\.Unwind\(\)

	}

}
